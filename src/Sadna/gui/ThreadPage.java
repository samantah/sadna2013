/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sadna.gui;

import Sadna.Client.Member;
import Sadna.Client.User;
import Sadna.db.Post;
import Sadna.db.ThreadMessage;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author fistuk
 */
public class ThreadPage extends javax.swing.JFrame {

    /**
     * Creates new form ThreadPage
     */
    private Post currPost;
    public ThreadPage() {
        initComponents();
        this.setResizable(false);
        this.jLabelError.setVisible(false);
        this.jLabelErrorCannotDelete.setVisible(false);
        this.jButtonEdit.setVisible(false);
        if (CurrentStatus.currUser instanceof Member) {
            logInButton.setVisible(false);
            registerButton.setVisible(false);
        } else {
            jButtonSignout.setVisible(false);
            jTextFieldAddTitle.setVisible(false);
            jTextFieldAddContent.setVisible(false);
            jButtonAddPost.setVisible(false);
            jButtonDeletePost.setVisible(false);
            jButtonEditPost.setVisible(false);
        }

        this.setResizable(false);
        jListPosts.setCellRenderer(new MyCellRenderer(80));
        jListPosts.setFixedCellWidth(80);
        jLabelThreadTitle.setText("Title: " + CurrentStatus.currThread.getTitle());
        jLabelThreadContent.setText("Content: " + CurrentStatus.currThread.getContent());

        String forumName = CurrentStatus.currForum.getForumName();
        String subForumName = CurrentStatus.currSubForum.getSubForumName();
        int threadId = CurrentStatus.currThread.getId();

        DefaultListModel listModel = new DefaultListModel();
        List<Post> listOfPosts;
        ThreadMessage thread = CurrentStatus.currUser.getThread(forumName,
                subForumName, threadId);
        listOfPosts = CurrentStatus.currUser.getAllPosts(thread);
        for (Post p : listOfPosts) {
            listModel.addElement(p);
        }
        jListPosts.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonBack = new javax.swing.JButton();
        logInButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        jLabelThreadTitle = new javax.swing.JLabel();
        jLabelThreadContent = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPosts = new javax.swing.JList();
        jButtonAddPost = new javax.swing.JButton();
        jTextFieldAddTitle = new javax.swing.JTextField();
        jTextFieldAddContent = new javax.swing.JTextField();
        jButtonSignout = new javax.swing.JButton();
        jLabelError = new javax.swing.JLabel();
        jButtonDeletePost = new javax.swing.JButton();
        jLabelErrorCannotDelete = new javax.swing.JLabel();
        jButtonEditPost = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonBack.setText("back");
        jButtonBack.setToolTipText("back to the sub forum page");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        logInButton.setText("log in");
        logInButton.setToolTipText("log in with an existing member");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });

        registerButton.setText("register");
        registerButton.setToolTipText("registers as a new member to the forum");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jLabelThreadTitle.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelThreadTitle.setText("Thread title");

        jLabelThreadContent.setText("Thread content");

        jListPosts.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "list of posts", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListPosts);

        jButtonAddPost.setText("add post");
        jButtonAddPost.setToolTipText("adds a new post to the current thread");
        jButtonAddPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPostActionPerformed(evt);
            }
        });

        jButtonSignout.setText("sign out");
        jButtonSignout.setToolTipText("sign out to a user mode");
        jButtonSignout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignoutActionPerformed(evt);
            }
        });

        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jLabelError.setText("Error - didn't post");

        jButtonDeletePost.setText("delete post");
        jButtonDeletePost.setToolTipText("delete the selected post\nauthorized only by the publisher, \nmoderator or the admin");
        jButtonDeletePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePostActionPerformed(evt);
            }
        });

        jLabelErrorCannotDelete.setForeground(new java.awt.Color(255, 0, 0));
        jLabelErrorCannotDelete.setText("Error - cannot delete");

        jButtonEditPost.setText("edit post");
        jButtonEditPost.setToolTipText("delete the selected post\nauthorized only by the publisher, \nmoderator or the admin");
        jButtonEditPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditPostActionPerformed(evt);
            }
        });

        jButtonEdit.setText("edit");
        jButtonEdit.setToolTipText("delete the selected post\nauthorized only by the publisher, \nmoderator or the admin");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelThreadContent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelThreadTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBack)
                        .addGap(149, 149, 149)
                        .addComponent(jButtonSignout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jButtonEditPost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDeletePost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logInButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registerButton)
                        .addGap(62, 62, 62))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldAddTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                            .addComponent(jTextFieldAddContent))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddPost))
                        .addGap(113, 113, 113))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jLabelErrorCannotDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabelThreadTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelThreadContent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldAddContent))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabelError)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelErrorCannotDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack)
                    .addComponent(registerButton)
                    .addComponent(logInButton)
                    .addComponent(jButtonAddPost)
                    .addComponent(jButtonSignout)
                    .addComponent(jButtonDeletePost)
                    .addComponent(jButtonEditPost))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        CurrentStatus.currThread = null;
        SubForumPage subForumPage = new SubForumPage();
        this.setVisible(false);
        this.dispose();
        subForumPage.setVisible(true);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed
        LogInPage logInPage = new LogInPage();
        this.setVisible(false);
        this.dispose();
        logInPage.setVisible(true);
    }//GEN-LAST:event_logInButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        RegistrationPage registrationPage = new RegistrationPage();
        this.setVisible(false);
        this.dispose();
        registrationPage.setVisible(true);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void jButtonSignoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignoutActionPerformed
        Member m = (Member) CurrentStatus.currUser;
        String forumName = CurrentStatus.currForum.getForumName();
        String userName = m.getUserName();
        User logout = m.logout(forumName);
        CurrentStatus.currUser = logout;
        ThreadPage threadPage = new ThreadPage();
        this.setVisible(false);
        this.dispose();
        threadPage.setVisible(true);
    }//GEN-LAST:event_jButtonSignoutActionPerformed

    private void jButtonAddPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPostActionPerformed
        String title = jTextFieldAddTitle.getText();
        String content = jTextFieldAddContent.getText();
        Member m = (Member) CurrentStatus.currUser;
        ThreadMessage tm = CurrentStatus.currThread;
        Post p = new Post(tm, title, content, m.getUserName());
        boolean postComment = m.postComment(p);
        if (!postComment) {
            this.jLabelError.setVisible(true);
            return;
        }
        ThreadPage threadPage = new ThreadPage();
        this.setVisible(false);
        this.dispose();
        threadPage.setVisible(true);
    }//GEN-LAST:event_jButtonAddPostActionPerformed

    private void jButtonDeletePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePostActionPerformed
        Post selectedPost = (Post) this.jListPosts.getSelectedValue();
        if (selectedPost == null) {
            return;
        }
        Member currMember = (Member) CurrentStatus.currUser;
        boolean deletePost = currMember.deletePost(selectedPost);
        if (!deletePost) {
            this.jLabelErrorCannotDelete.setVisible(true);
        } else {
            ThreadPage threadPage = new ThreadPage();
            this.setVisible(false);
            this.dispose();
            threadPage.setVisible(true);
        }
    }//GEN-LAST:event_jButtonDeletePostActionPerformed

    private void jButtonEditPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditPostActionPerformed
        Post selectedPost = (Post) this.jListPosts.getSelectedValue();
        if (selectedPost==null)
            return;
        String title = selectedPost.getTitle();
        String content = selectedPost.getContent();
        this.jTextFieldAddTitle.setText(title);
        this.jTextFieldAddContent.setText(content);
        this.jButtonEdit.setVisible(true);
        this.jButtonAddPost.setVisible(false);
        this.currPost = selectedPost;
    }//GEN-LAST:event_jButtonEditPostActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        
    }//GEN-LAST:event_jButtonEditActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPost;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonDeletePost;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonEditPost;
    private javax.swing.JButton jButtonSignout;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelErrorCannotDelete;
    private javax.swing.JLabel jLabelThreadContent;
    private javax.swing.JLabel jLabelThreadTitle;
    private javax.swing.JList jListPosts;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldAddContent;
    private javax.swing.JTextField jTextFieldAddTitle;
    private javax.swing.JButton logInButton;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables
}
